generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Server {
  id               String          @id @default(cuid())
  createdAt        DateTime
  userId           String
  name             String
  owner            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  status           String?         @default("unlinked")
  MCUsers          MinecraftUser[]
  verificationCode String          @unique

  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  servers       Server[]
  sessions      Session[]
  MCUsers       MinecraftUser[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MinecraftUser {
  id      String   @id @unique
  userId  String   @unique
  User    User     @relation(fields: [userId], references: [id])
  Servers Server[]

  @@index([userId])
}

model UUIDVerificationToken {
  id   String @id @default(cuid())
  code String @unique
  UUID String @unique
}
